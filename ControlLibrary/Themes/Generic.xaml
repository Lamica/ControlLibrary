<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ControlLibrary"
    xmlns:converters="using:ControlLibrary.Converter"
    xmlns:primitives="using:ControlLibrary.Primitives.Clipper"
    >

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <SolidColorBrush x:Key="FlyoutBorderBrush">#FF212121</SolidColorBrush>
            <SolidColorBrush x:Key="FlyoutBackgroundBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuBorderBrush">#FF212121</SolidColorBrush>
            <SolidColorBrush x:Key="MenuBackgroundBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemBaseTextBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemBaseBackgroundBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemHoverBrush">#FFDEDEDE</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemPressedBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemPressedTextBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemHoverTextBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="MenuSeparatorStrokeBrush">#FF707070</SolidColorBrush>
            <SolidColorBrush x:Key="SettingsFlyoutHeaderBackgroundBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="SettingsFlyoutContentBackgroundThemeBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="SettingsFlyoutContentForegroundThemeBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemForegroundThemeBrush">#FF5B2EC5</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemPointerOverThemeBrush">#FF8152EF</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemPointerPressedThemeBrush">#FF8152EF</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemBackgroundThemeBrush">#59FFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemDisabledForegroundThemeBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemBorderThemeBrush">Transparent</SolidColorBrush>
            <x:String x:Key="SettingsFlyoutBackButtonGlyph">&#xE0BA;</x:String>
            <SolidColorBrush x:Key="FlipViewIndicatorUnselectedThemeBrush">Gray</SolidColorBrush>
            <SolidColorBrush x:Key="FlipViewIndicatorSelectedThemeBrush">#FFFFFFFF</SolidColorBrush>
            <x:Double x:Key="CustomDialogBorderThemeThickness">0</x:Double>
            <SolidColorBrush x:Key="CustomDialogBorderThemeBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="CustomDialogBackgroundThemeBrush">#FFFFFFFF</SolidColorBrush>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Light">
            <SolidColorBrush x:Key="FlyoutBorderBrush">#FF212121</SolidColorBrush>
            <SolidColorBrush x:Key="FlyoutBackgroundBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuBorderBrush">#FF212121</SolidColorBrush>
            <SolidColorBrush x:Key="MenuBackgroundBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemBaseTextBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemBaseBackgroundBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemHoverBrush">#FFDEDEDE</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemPressedBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemPressedTextBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemHoverTextBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="MenuSeparatorStrokeBrush">#FF707070</SolidColorBrush>
            <SolidColorBrush x:Key="SettingsFlyoutHeaderBackgroundBrush">LightGray</SolidColorBrush>
            <SolidColorBrush x:Key="SettingsFlyoutContentBackgroundThemeBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="SettingsFlyoutContentForegroundThemeBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemForegroundThemeBrush">#FF4617B4</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemPointerOverThemeBrush">#FF7241E4</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemPointerPressedThemeBrush">#FF7241E4</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemBackgroundThemeBrush">#59000000</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemDisabledForegroundThemeBrush">#FF000000</SolidColorBrush>
            <SolidColorBrush x:Key="RatingItemBorderThemeBrush">Transparent</SolidColorBrush>
            <x:String x:Key="SettingsFlyoutBackButtonGlyph">&#xE0BA;</x:String>
            <SolidColorBrush x:Key="FlipViewIndicatorUnselectedThemeBrush">Gray</SolidColorBrush>
            <SolidColorBrush x:Key="FlipViewIndicatorSelectedThemeBrush">#FF000000</SolidColorBrush>
            <x:Double x:Key="CustomDialogBorderThemeThickness">0</x:Double>
            <SolidColorBrush x:Key="CustomDialogBorderThemeBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="CustomDialogBackgroundThemeBrush">#FF000000</SolidColorBrush>
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <SolidColorBrush x:Key="FlyoutBorderBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="FlyoutBackgroundBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="MenuBorderBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="MenuItemBaseTextBrush" Color="{StaticResource SystemColorButtonTextColor}"/>
            <SolidColorBrush x:Key="MenuItemBaseBackgroundBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="MenuItemHoverBrush" Color="{StaticResource SystemColorHighlightColor}" />
            <SolidColorBrush x:Key="MenuItemPressedBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="MenuItemPressedTextBrush" Color="{StaticResource SystemColorButtonFaceColor}"/>
            <SolidColorBrush x:Key="MenuItemHoverTextBrush" Color="{StaticResource SystemColorButtonTextColor}"/>
            <SolidColorBrush x:Key="MenuSeparatorStrokeBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="SettingsFlyoutHeaderBackgroundBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="SettingsFlyoutContentBackgroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="SettingsFlyoutContentForegroundThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="RatingItemForegroundThemeBrush" Color="{StaticResource SystemColorHighlightColor}" />
            <SolidColorBrush x:Key="RatingItemPointerOverThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="RatingItemPointerPressedThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <SolidColorBrush x:Key="RatingItemBackgroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="RatingItemDisabledForegroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="RatingItemBorderThemeBrush" Color="{StaticResource SystemColorButtonTextColor}" />
            <x:String x:Key="SettingsFlyoutBackButtonGlyph">&#xE0C4;</x:String>
            <SolidColorBrush x:Key="FlipViewIndicatorUnselectedThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
            <SolidColorBrush x:Key="FlipViewIndicatorSelectedThemeBrush" Color="{StaticResource SystemColorHighlightColor}" />
            <x:Double x:Key="CustomDialogBorderThemeThickness">1</x:Double>
            <SolidColorBrush x:Key="CustomDialogBorderThemeBrush">#FFFFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="CustomDialogBackgroundThemeBrush" Color="{StaticResource SystemColorButtonFaceColor}" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <converters:ColorBrightnessConverter x:Key="ColorBrightness" />
    <converters:ColorContrastConverter x:Key="ColorContrast" />
    <SolidColorBrush x:Key="PrefixStatusSolidColorBrush">#B0DBEF</SolidColorBrush>
    <x:String x:Key="SettingsFlyoutHeaderTextDefault">Application Setting</x:String>

    <Style x:Key="SettingsBackButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="26.66667"/>
        <Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
        <Setter Property="AutomationProperties.Name" Value="Back"/>
        <Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Width="30" Height="30">
                        <Grid Margin="-3,-5,0,0">
                            <TextBlock x:Name="BackgroundGlyph" Text="&#xE0D4;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}"/>
                            <TextBlock x:Name="NormalGlyph" Text="{StaticResource SettingsFlyoutBackButtonGlyph}" Foreground="{StaticResource BackButtonForegroundThemeBrush}"/>
                            <TextBlock x:Name="ArrowGlyph" Text="&#xE0C4;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0"/>
                        </Grid>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewFeedNameTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Microsoft Yahei"/>
        <!--<Setter Property="FontSize" Value="20" />-->
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontStretch" Value="Normal"/>
    </Style>

    <Style x:Key="NewFeedTimeTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Microsoft Yahei"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource PrefixStatusSolidColorBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontStretch" Value="Normal"/>
    </Style>

    <Style TargetType="local:HubTile">
        <Style.Setters>
            <Setter Property="Height" Value="173"/>
            <Setter Property="Width" Value="173"/>
            <!--{StaticResource ApplicationPageBackgroundBrush}-->
            <Setter Property="Background" Value="Blue"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="FontSize" Value="14.0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:HubTile">
                        <Grid>
                            <Grid.Resources>
                                <CubicEase EasingMode="EaseOut" x:Key="HubTileEaseOut"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ImageStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="ExpandedToSemiexpanded" 
                                                          From="Expanded" To="Semiexpanded"
                                                          GeneratedDuration="0:0:0.85">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                               Storyboard.TargetName="TitlePanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-173.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="-79.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX" 
                                                                               Storyboard.TargetName="ViewportProjection">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="SemiexpandedToCollapsed" 
                                                          From="Semiexpanded" To="Collapsed"
                                                          GeneratedDuration="0:0:0.85">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                               Storyboard.TargetName="TitlePanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-79.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="0.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="CollapsedToExpanded" 
                                                          From="Collapsed" To="Expanded"
                                                          GeneratedDuration="0:0:0.85">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                               Storyboard.TargetName="TitlePanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="-173.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ExpandedToFlipped" 
                                                          From="Expanded" To="Flipped"
                                                          GeneratedDuration="0:0:0.85">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                               Storyboard.TargetName="TitlePanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-173.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Image">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.185" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX" 
                                                                               Storyboard.TargetName="ViewportProjection">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="180.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="FlippedToExpanded" 
                                                          From="Flipped" To="Expanded"
                                                          GeneratedDuration="0:0:0.85">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                               Storyboard.TargetName="TitlePanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-173.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Image">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.185" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX" 
                                                                               Storyboard.TargetName="ViewportProjection">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="180.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="360.0" EasingFunction="{StaticResource HubTileEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualStateGroup.States>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="-173.0" 
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                 Storyboard.TargetName="TitlePanel"/>
                                                <DoubleAnimation Duration="0" To="0.0" 
                                                                 Storyboard.TargetProperty="RotationX" 
                                                                 Storyboard.TargetName="ViewportProjection"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Image">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Semiexpanded">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="-79.0" 
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                 Storyboard.TargetName="TitlePanel"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed"/>
                                        <VisualState x:Name="Flipped">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="-173.0" 
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" 
                                                                 Storyboard.TargetName="TitlePanel"/>
                                                <DoubleAnimation Duration="0" To="180.0" 
                                                                 Storyboard.TargetProperty="RotationX" 
                                                                 Storyboard.TargetName="ViewportProjection"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="Image">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup.States>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Viewbox Stretch="Fill">
                                <StackPanel x:Name="Viewport"
                                    Height="173" Width="173">
                                    <!--<StackPanel.Background>
                                        <ImageBrush ImageSource="{TemplateBinding SourceDefault}" Stretch="Fill"/>
                                    </StackPanel.Background>-->
                                    <StackPanel.Projection>
                                        <PlaneProjection CenterOfRotationY="0.25" x:Name="ViewportProjection"/>
                                    </StackPanel.Projection>
                                    <Grid>
                                        <Grid x:Name="TitlePanel" Opacity="1"
                                                Height="346" Width="173"
                                                RenderTransformOrigin="0.5,0.5">
                                            <Grid.RenderTransform>
                                                <CompositeTransform/>
                                            </Grid.RenderTransform>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <!--<Image x:Name="defaultImage" Grid.Row="0" Stretch="Fill" Source="{TemplateBinding SourceDefault}" Height="173" Width="173"/>-->
                                            <local:ClipImage x:Name="defaultImage" Grid.Row="0" Source="{TemplateBinding SourceDefault}" Height="173" Width="173"
                                                             IsCacheImage="False"/>
                                            <Border Grid.Row="0"                                        
                                        Background="{TemplateBinding Background}">
                                                <!---->
                                        <TextBlock VerticalAlignment="Bottom"
                                               Margin="10,0,0,6"
                                               Text="{TemplateBinding Title}"
                                               FontFamily="Microsoft YaHei"
                                               FontSize="{TemplateBinding NotificationFontSize}"
                                               Foreground="{TemplateBinding Foreground}"
                                               TextWrapping="NoWrap" 
                                               LineStackingStrategy="BlockLineHeight"
                                               LineHeight="39">
                                    </TextBlock>
                                </Border>
                                <Grid x:Name="BackPanel"
                                      Grid.Row="1"   
                                      Height="173" Width="173"
                                      Background="{TemplateBinding Background}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Projection>
                                        <PlaneProjection CenterOfRotationY="0.5" RotationX="180"/>
                                    </Grid.Projection>
                                            <!---->
                                                <TextBlock x:Name="NotificationBlock" Grid.Row="0"
                                               Margin="8,8,0,6"
                                               Text="{TemplateBinding Notification}"
                                               FontFamily="Microsoft YaHei" Style="{StaticResource NewFeedTimeTextStyle}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Foreground="{TemplateBinding Foreground}"
                                               TextWrapping="NoWrap"
                                               LineStackingStrategy="BlockLineHeight"
                                               LineHeight="32"/>
                                                <!---->
                                            <TextBlock x:Name="MessageBlock" Grid.Row="0"
                                               Margin="10,10,10,6"
                                               Text="{TemplateBinding Message}"
                                               FontFamily="Microsoft YaHei" Style="{StaticResource NewFeedTimeTextStyle}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Foreground="{TemplateBinding Foreground}"
                                               TextWrapping="Wrap"
                                               LineStackingStrategy="BlockLineHeight"
                                               LineHeight="23.333"/>
                                            <!---->
                                            <TextBlock x:Name="BackTitleBlock" Grid.Row="1" 
                                               VerticalAlignment="Bottom" 
                                               Margin="10,0,0,6"
                                               FontFamily="Microsoft YaHei" Style="{StaticResource NewFeedNameTextStyle}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Foreground="{TemplateBinding Foreground}"
                                               TextWrapping="NoWrap"/>
                                        </Grid>
                                        <!--<Image x:Name="ImageOpposite" Grid.Row="1" Stretch="Fill" Source="{TemplateBinding SourceOpposite}" Height="173" Width="173"/>-->
                                        <local:ClipImage x:Name="ImageOpposite" Grid.Row="1" Source="{TemplateBinding SourceOpposite}" Height="173" Width="173"
                                                         IsCacheImage="{TemplateBinding IsCacheImage}" CacheType="{TemplateBinding CacheType}" IsAnimation="{TemplateBinding IsAnimation}" 
                                                         AnimationTime="{TemplateBinding AnimationTime}"/>
                                        <!--<Image x:Name="Image" Grid.Row="1"
                                        Height="173" Width="173"
                                        Stretch="UniformToFill"
                                        Source="{TemplateBinding Source}" Opacity="1"/>-->

                                        <local:ClipImage x:Name="Image" Grid.Row="1" IsCacheImage="{TemplateBinding IsCacheImage}" CacheType="{TemplateBinding CacheType}"
                                                              IsAnimation="{TemplateBinding IsAnimation}" AnimationTime="{TemplateBinding AnimationTime}"
                                                              Height="173" Width="173" Source="{TemplateBinding Source}" Opacity="1"/>
                                    </Grid>
                        </Grid>
                        </StackPanel>
                        </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="local:PhotoLiveTileBase">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PhotoLiveTileBase">
                    <!--<Viewbox Stretch="Fill">
                        <Grid>-->
                    <Canvas x:Name="LayoutRoot"/>
                    <!--</Grid>
                    </Viewbox>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:PhotoLiveTile">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PhotoLiveTile">
                    <Grid>
                        <local:PhotoLiveTileBase x:Name="photoLiveTileBase" Source="{TemplateBinding Source}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:Slide">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Slide">
                    <Grid x:Name="gridSb">
                        <Grid.Resources>
                            <Storyboard x:Name="uxSBPanning">
                                <!--50 -50-->
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="uxHorizontalImage">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="33"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:10" Value="-33"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="uxHorizontalImage">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="33"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:10" Value="-33"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                            <Storyboard x:Name="uxSBZoomming">
                                <!--2.5 2-->
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="uxHorizontalImage">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.7"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:10" Value="1.36"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="uxHorizontalImage">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1.7"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:10" Value="1.36"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <!--<Storyboard x:Name="uxSBOutro">
                                <DoubleAnimation Duration="0:0:1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LayoutRoot" />
                            </Storyboard>-->
                            <Storyboard x:Name="uxSBOutro">
                                <DoubleAnimation Duration="0:0:1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="uxHorizontalImage" />
                            </Storyboard>
                        </Grid.Resources>

                        <Grid x:Name="LayoutRoot" Background="Transparent" Opacity="1">
                            <!--<Image x:Name="uxHorizontalImage" Stretch="Uniform" Width="400" Height="400" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <CompositeTransform ScaleX="3" ScaleY="3"/>
                                </Image.RenderTransform>                               
                            </Image>-->
                            <Image x:Name="uxHorizontalImage" Stretch="None" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <!--3 3-->
                                    <CompositeTransform ScaleX="2" ScaleY="2" />
                                </Image.RenderTransform>
                            </Image>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:AlbumLiveTile">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AlbumLiveTile">
                    <Grid x:Name="LayoutRoot" ManipulationMode="All" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <Storyboard x:Name="uxSBIntro">
                                <DoubleAnimation Duration="0:0:1" From="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="uxSlides" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="uxExitHint">
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>
                        <Grid x:Name="uxSlides"/>
                        <Border x:Name="uxExitHint" HorizontalAlignment="Center" VerticalAlignment="Center"
			                    CornerRadius="18" Background="{TemplateBinding BorderColor}" Visibility="{TemplateBinding VisibilityBorder}"
			                    Padding="20,0,20,5">
                            <TextBlock Text="double tap to exit" FontFamily="{TemplateBinding FontFamily}"
				                        FontSize="{TemplateBinding FontSize}" Margin="0,6,0,0"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:PopupGridBase">
        <Setter Property="OverlayBrush">
            <Setter.Value>
                <SolidColorBrush Color="#7F000000"/>
            </Setter.Value>
        </Setter>
        <Setter Property="OverlayOpacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PopupGridBase">
                    <Grid x:Name="Root">
                        <Canvas x:Name="gridOverlay" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Background="{TemplateBinding OverlayBrush}" Opacity="{TemplateBinding OverlayOpacity}"
                              Visibility="{TemplateBinding OverlayVisibility}" Width="{TemplateBinding OverlayWidth}" Height="{TemplateBinding OverlayHeight}"/>

                        <Grid x:Name="gridPopup" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0" Visibility="Collapsed">
                            <Grid.Resources>
                                <Storyboard x:Name="gridPopupOpen">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridPopup">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridPopup">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Name="gridPopupClosed">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridPopup">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00.46">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridPopup">
                                        <EasingDoubleKeyFrame KeyTime="00:00:00.46" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Grid.Resources>
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:PopupGrid">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PopupGrid">
                    <Popup x:Name="popup" IsLightDismissEnabled="False">
                        <!--OverlayBrush="{TemplateBinding OverlayBrush}"-->
                        <local:PopupGridBase x:Name="popupGridBase" ChildrenAddGrid="{TemplateBinding ChildrenAddGrid}" 
                                             OverlayHeight="{TemplateBinding OverlayHeight}" OverlayOpacity="{TemplateBinding OverlayOpacity}" 
                                             OverlayVisibility="{TemplateBinding OverlayVisibility}" OverlayWidth="{TemplateBinding OverlayWidth}" IsZoom="{TemplateBinding IsZoom}"
                                             IsAnimation="{TemplateBinding IsAnimation}"/>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:PopupBorderBase">
        <Setter Property="OverlayBrush">
            <Setter.Value>
                <SolidColorBrush Color="#7F000000"/>
            </Setter.Value>
        </Setter>
        <Setter Property="OverlayOpacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PopupBorderBase">
                    <Grid x:Name="Root">
                        <Canvas x:Name="gridOverlay" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" Background="{TemplateBinding OverlayBrush}" Opacity="{TemplateBinding OverlayOpacity}"
                              Visibility="{TemplateBinding OverlayVisibility}" Width="{TemplateBinding OverlayWidth}" Height="{TemplateBinding OverlayHeight}"/>
                        
                        <Grid x:Name="gridPopup" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0" Visibility="Collapsed">
                            <Grid.Resources>
                                <Storyboard x:Name="gridPopupOpen">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridPopup">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridPopup">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.45" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.55" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Name="gridPopupClosed">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleX" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="(RenderTransform).(Children)[0].ScaleY" Storyboard.TargetName="gridPopup">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="1.05"/>
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.45" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridPopup">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00.46">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="gridPopup">
                                        <EasingDoubleKeyFrame KeyTime="00:00:00.46" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Grid.Resources>
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid x:Name="stackPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                <Border x:Name="borderHead" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0"></Border>
                                <Grid x:Name="gridTail" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                                    <Border x:Name="borderTail"></Border>
                                </Grid>
                                <Border x:Name="borderFoot" HorizontalAlignment="Right" VerticalAlignment="Bottom"></Border>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:PopupBorder">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PopupBorder">
                    <Popup x:Name="popup" IsLightDismissEnabled="False" IsOpen="True">
                        <!--OverlayBrush="{TemplateBinding OverlayBrush}"-->
                        <local:PopupBorderBase x:Name="popupBorderBase" ChildrenAddGrid="{TemplateBinding ChildrenAddGrid}" ChildrenAddHeadGrid="{TemplateBinding ChildrenAddHeadGrid}" 
                                              OverlayHeight="{TemplateBinding OverlayHeight}" OverlayOpacity="{TemplateBinding OverlayOpacity}" 
                                             OverlayVisibility="{TemplateBinding OverlayVisibility}" OverlayWidth="{TemplateBinding OverlayWidth}" IsZoom="{TemplateBinding IsZoom}"
                                             ChildrenAddFootGrid="{TemplateBinding ChildrenAddFootGrid}"/>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:OfflineTextBlock">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:OfflineTextBlock">
                    <Grid x:Name="grid">
                        <Canvas x:Name="canvas" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0">
                            <Canvas.Resources>
                                <Storyboard x:Name="ToTopSb">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="tbCenter">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="-13.2"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tbCenter">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tbBottom">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="tbBottom">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="13.2"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Name="ToBottomSb">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="tbCenter">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="13.2"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tbCenter">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Top)" Storyboard.TargetName="tbTop">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="-13.2"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tbTop">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Canvas.Resources>
                            <TextBlock x:Name="tbTop" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" FontStretch="{TemplateBinding FontStretch}" TextAlignment="{TemplateBinding TextAlignment}" TextTrimming="{TemplateBinding TextTrimming}" TextWrapping="NoWrap" Text="0" Opacity="0" Canvas.Top="-13.2"/>
                            <TextBlock x:Name="tbCenter" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" FontStretch="{TemplateBinding FontStretch}" TextAlignment="{TemplateBinding TextAlignment}" TextTrimming="{TemplateBinding TextTrimming}" TextWrapping="NoWrap" Text="0" />
                            <TextBlock x:Name="tbBottom" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" FontStretch="{TemplateBinding FontStretch}" TextAlignment="{TemplateBinding TextAlignment}" TextTrimming="{TemplateBinding TextTrimming}" TextWrapping="NoWrap" Text="0" Opacity="0" Canvas.Top="13.2" />
                        </Canvas>
                        <TextBlock x:Name="tbTemp" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseHubTileStyle"
           TargetType="local:HubTileBase">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Width"
                Value="132"/>
        <Setter Property="Height"
                Value="132"/>
        <Setter Property="Margin"
                Value="5"/>
        <Setter Property="Foreground"
                Value="White"/>
    </Style>

    <Style TargetType="local:MosaicTile"
           x:Key="DefaultMosaicTileStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MosaicTile">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Front" To="Back">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"
                                                             FillBehavior="HoldEnd"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"
                                                             FillBehavior="HoldEnd"/>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="Back" To="Front">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"
                                                             FillBehavior="HoldEnd"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Front">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="-90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Back">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter x:Name="BackPresenter"
                                          Content="{TemplateBinding BackContent}"
                                          ContentTemplate="{TemplateBinding BackContentTemplate}">
                            <ContentPresenter.Projection>
                                <PlaneProjection x:Name="BackProjection"
                                                    RotationX="-90"/>
                            </ContentPresenter.Projection>
                        </ContentPresenter>

                        <ContentPresenter x:Name="FrontPresenter"
                                          Content="{TemplateBinding FrontContent}"
                                          ContentTemplate="{TemplateBinding BackContentTemplate}">
                            <ContentPresenter.Projection>
                                <PlaneProjection x:Name="FrontProjection"/>
                            </ContentPresenter.Projection>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:MosaicTile"
           BasedOn="{StaticResource DefaultMosaicTileStyle}">
    </Style>

    <Style TargetType="local:CustomMosaicTile">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CustomMosaicTile">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Front" To="Back">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"
                                                             FillBehavior="HoldEnd"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"
                                                             FillBehavior="HoldEnd"/>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="Back" To="Front">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"
                                                             FillBehavior="HoldEnd"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Front">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="-90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Back">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter x:Name="BackPresenter">
                            <ContentPresenter.Content>
                                <!--"{TemplateBinding Background}"-->
                                <Border Background="{TemplateBinding MosaicTileBrush}">
                                    <Canvas x:Name="PART_BackCanvas">
                                        <Image Stretch="UniformToFill"
                                               Source="{TemplateBinding BackContent}"/>
                                    </Canvas>
                                </Border>
                            </ContentPresenter.Content>

                            <ContentPresenter.Projection>
                                <PlaneProjection x:Name="BackProjection"
                                                 RotationX="-90"/>
                            </ContentPresenter.Projection>
                        </ContentPresenter>

                        <ContentPresenter x:Name="FrontPresenter">
                            <ContentPresenter.Content>
                                <!--{TemplateBinding Background}-->
                                <Border Background="{TemplateBinding MosaicTileBrush}">
                                    <Canvas x:Name="PART_FrontCanvas">
                                        <Image Stretch="UniformToFill"
                                               Source="{TemplateBinding FrontContent}"/>
                                    </Canvas>
                                </Border>
                            </ContentPresenter.Content>

                            <ContentPresenter.Projection>
                                <PlaneProjection x:Name="FrontProjection"/>
                            </ContentPresenter.Projection>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:MosaicHubTile"
           BasedOn="{StaticResource BaseHubTileStyle}">
        <Setter Property="UpdateInterval"
                Value="0:0:1"/>
        <Setter Property="Padding"
                Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MosaicHubTile">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="NotFlipped"
                                                          To="Flipped">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="Flipped"
                                                          To="NotFlipped">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Flipped">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="NotFlipped">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="-90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Grid x:Name="PART_LayoutRoot">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}"/>
                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Column="1"/>
                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Column="2"/>

                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Row="1"/>
                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Row="1" Grid.Column="1"/>
                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Row="1" Grid.Column="2"/>

                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Row="2"/>
                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Row="2" Grid.Column="1"/>
                                <local:CustomMosaicTile MosaicTileBrush="{TemplateBinding MosaicTileBrush}" Grid.Row="2" Grid.Column="2"/>
                            </Grid>

                            <TextBlock x:Name="PART_Title"
                                            HorizontalAlignment="{TemplateBinding TitleHorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding TitleVerticalAlignment}" 
                                            Text="{TemplateBinding Title}" FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}"
                                            Margin="{TemplateBinding Padding}"/>

                            <Grid.Projection>
                                <PlaneProjection x:Name="FrontProjection"/>
                            </Grid.Projection>
                        </Grid>

                        <ContentPresenter x:Name="PART_BackContent"
                                          Content="{TemplateBinding BackContent}"
                                          ContentTemplate="{TemplateBinding BackContentTemplate}">
                            <ContentPresenter.Projection>
                                <PlaneProjection x:Name="BackProjection"/>
                            </ContentPresenter.Projection>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ClipImage">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ClipImage">
                    <Grid x:Name="gridRoot" Background="{TemplateBinding Background}">
                        <!--<Image x:Name="clipImage" HorizontalAlignment="Center" VerticalAlignment="Center"
                               RenderTransformOrigin="0.5,0.5"/>-->
                        <local:CacheImage x:Name="clipImage" HorizontalAlignment="Center" VerticalAlignment="Center"
                               RenderTransformOrigin="0.5,0.5" CacheType="{TemplateBinding CacheType}" IsCacheImage="{TemplateBinding IsCacheImage}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:DragSource">
        <Setter Property="Background" Value="#ffffffff"></Setter>
        <Setter Property="BorderBrush" Value="#ff999999"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DragSource">
                    <Canvas x:Name="MainControlHost" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                             >

                        <!-- The content ghost that remains when dragging (typically a usercontrol) -->
                        <ContentPresenter x:Name="GhostContentControl" 
                              Content="{TemplateBinding Ghost}"   
                              Visibility="{TemplateBinding GhostVisibility}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        <!-- The draggable control with draghandle (DragBar) -->
                        <Grid x:Name="MainDraggableControl" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              >

                            <!-- Border with white background -->
                            <Border CornerRadius="3,3,3,3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="0">
                                <Grid>
                                    <!-- The content (typically a usercontrol) -->
                                    <ContentPresenter x:Name="MainContentPresenter" Content="{TemplateBinding Content}" 
                                                       />

                                    <!-- DragBar: handlers for dragging will be applied to this element  -->
                                    <Border x:Name="DragBar" CornerRadius="3,3,0,0" Background="#00ffffff" 
                                                VerticalAlignment="Top" MinHeight="12"
                                                Margin="0,0,0,0" BorderThickness="1">
                                        <Grid>
                                            <Rectangle Opacity="0.5" >
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="6.58300018310547,6.08300018310547" StartPoint="2.31500005722046,1.81500005722046" 
                                                   SpreadMethod="Repeat" MappingMode="Absolute">
                                                        <GradientStop Color="#FFAFAFAF" Offset="0"/>
                                                        <GradientStop Color="#00FFFFFF" Offset="1"/>
                                                        <GradientStop Color="#00FFFFFF" Offset="0.339"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Template for DropTarget  -->
    <Style TargetType="local:DropTarget">
        <Setter Property="DropBorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF70BFF5" Offset="0"/>
                    <GradientStop Color="#FF0097FF" Offset="1"/>
                    <GradientStop Color="#FF70BFF5" Offset="0.52"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="DropBorderThickness" Value="4"/>
        <Setter Property="DropBorderCornerRadius" Value="3,3,3,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DropTarget">
                    <Grid x:Name="MainControlHost"
                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <!-- The content ghost when nothing has been dropped -->
                        <Grid x:Name="GhostContentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        <Grid x:Name="MainContentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              />

                        <!-- The bounding box when a dragsource is hovering over the target -->
                        <Border x:Name="BoundingBorder" CornerRadius="{TemplateBinding DropBorderCornerRadius}"
                                Background="Transparent" Opacity="0"
                                BorderThickness="{TemplateBinding DropBorderThickness}"
                                Padding="1" IsHitTestVisible="False"
                                BorderBrush="{TemplateBinding DropBorderBrush}" 
                                >
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:PictureRotatorHubTile"
           BasedOn="{StaticResource BaseHubTileStyle}">
        <Setter Property="Height"
                Value="171"/>
        <Setter Property="Width"
                Value="352"/>
        <Setter Property="UpdateInterval"
                Value="0:0:10"/>
        <Setter Property="Padding"
                Value="12"/>
        <Setter Property="Background"
                Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PictureRotatorHubTile">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="NotFlipped"
                                                          To="Flipped">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="Flipped"
                                                          To="NotFlipped">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Flipped">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="NotFlipped">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="-90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Background="{TemplateBinding Background}">
                            <Canvas x:Name="PART_LayoutRoot">
                                <StackPanel x:Name="PART_Panel">
                                    <Canvas Height="{TemplateBinding Height}"
                                            Width="{TemplateBinding Width}">
                                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                              x:Name="PART_FirstContent">
                                            <ContentPresenter Content="{TemplateBinding FirstContent}"
                                                              VerticalAlignment="Center"/>
                                        </Grid>
                                    </Canvas>

                                    <Canvas Height="{TemplateBinding Height}"
                                            Width="{TemplateBinding Width}">
                                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                            <ContentPresenter Content="{TemplateBinding SecondContent}"
                                                              VerticalAlignment="Center"/>
                                        </Grid>
                                    </Canvas>
                                </StackPanel>
                            </Canvas>

                            <ContentPresenter VerticalAlignment="Bottom"
                                              HorizontalAlignment="Left"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Title}"/>
                            <Grid.Projection>
                                <PlaneProjection x:Name="FrontProjection"/>
                            </Grid.Projection>
                        </Grid>

                        <ContentPresenter x:Name="PART_BackContent"
                                          Content="{TemplateBinding BackContent}"
                                          ContentTemplate="{TemplateBinding BackContentTemplate}">
                            <ContentPresenter.Projection>
                                <PlaneProjection x:Name="BackProjection"/>
                            </ContentPresenter.Projection>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TitleImageRotatorHubTile"
           BasedOn="{StaticResource BaseHubTileStyle}">
        <Setter Property="Height"
                Value="171"/>
        <Setter Property="Width"
                Value="352"/>
        <Setter Property="UpdateInterval"
                Value="0:0:10"/>
        <Setter Property="Padding"
                Value="12"/>
        <Setter Property="Background"
                Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TitleImageRotatorHubTile">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="NotFlipped"
                                                          To="Flipped">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="Flipped"
                                                          To="NotFlipped">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection"
                                                             Duration="0:0:0.4"
                                                             BeginTime="0:0:0.4"
                                                             From="-90"
                                                             To="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection"
                                                             Duration="0:0:0.4"
                                                             From="0"
                                                             To="90"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Flipped">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="90"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="NotFlipped">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="FrontProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RotationX"
                                                             Storyboard.TargetName="BackProjection">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="-90"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Background="{TemplateBinding Background}">
                            <Canvas x:Name="PART_LayoutRoot">
                                <StackPanel x:Name="PART_Panel">
                                    <Canvas Height="{TemplateBinding Height}"
                                            Width="{TemplateBinding Width}">
                                        <Grid Width="{TemplateBinding Width}"
                                              x:Name="PART_FirstContent" Height="{TemplateBinding Height}">
                                            <!--<Viewbox Stretch="Fill">-->
                                            <!--Height="200" Width="300"-->
                                            <Grid Height="200" Width="300">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="12" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="5"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Bottom">
                                                    <TextBlock x:Name="firstTitleName" FontSize="{TemplateBinding TitleFontSize}" Foreground="{TemplateBinding TitleForeground}" Text=""/>
                                                </StackPanel>
                                                <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal" Margin="0,0,0,79">
                                                    <!--Source="{TemplateBinding FirstImage}"-->
                                                    <!--<Image x:Name="FirstHeader" HorizontalAlignment="Right" VerticalAlignment="Top"
                                                            Margin="0,5,17,0" Width="50" Height="50" Stretch="Fill"/>-->
                                                    <local:ClipImage x:Name="FirstHeader" Height="50" Width="50" 
                                                                         HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,17,0"/>
                                                    <TextBlock x:Name="firstContent" Margin="0,0,10,0" HorizontalAlignment="Right" 
                                                                   FontSize="{TemplateBinding ContentFontSize}" Foreground="{TemplateBinding ContentForeground}"
                                                                   VerticalAlignment="Top" Text="" 
                                                                   TextWrapping="Wrap" Width="240"/>
                                                </StackPanel>
                                            </Grid>
                                            <!--</Viewbox>-->
                                        </Grid>
                                    </Canvas>

                                    <Canvas Height="{TemplateBinding Height}"
                                            Width="{TemplateBinding Width}">
                                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                            <!--<Viewbox Stretch="Fill">-->
                                            <!--Height="200" Width="300"-->
                                            <Grid Height="200" Width="300">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="12" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="5"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Bottom">
                                                    <TextBlock x:Name="secondTitleName" FontSize="{TemplateBinding TitleFontSize}" Foreground="{TemplateBinding TitleForeground}" Text=""/>
                                                </StackPanel>
                                                <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal" Margin="0,0,0,79">
                                                    <!--Source="{TemplateBinding SecondImage}"-->
                                                    <!--<Image x:Name="SecondHeader" HorizontalAlignment="Right" VerticalAlignment="Top"
                                                            Margin="0,5,17,0" Width="50" Height="50" Stretch="Fill"/>-->
                                                    <local:ClipImage x:Name="SecondHeader" Width="50" Height="50"
                                                            Margin="0,5,17,0" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                                    <TextBlock x:Name="secondContent" Margin="0,0,10,0" HorizontalAlignment="Right" 
                                                                   FontSize="{TemplateBinding ContentFontSize}" Foreground="{TemplateBinding ContentForeground}"
                                                                   VerticalAlignment="Top" Text="" 
                                                                   TextWrapping="Wrap" Width="240"/>
                                                </StackPanel>
                                            </Grid>
                                            <!--</Viewbox>-->
                                        </Grid>
                                    </Canvas>
                                </StackPanel>
                            </Canvas>

                            <ContentPresenter VerticalAlignment="Bottom"
                                              HorizontalAlignment="Left"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Title}"/>
                            <Grid.Projection>
                                <PlaneProjection x:Name="FrontProjection"/>
                            </Grid.Projection>
                        </Grid>

                        <ContentPresenter x:Name="PART_BackContent"
                                          Content="{TemplateBinding BackContent}"
                                          ContentTemplate="{TemplateBinding BackContentTemplate}">
                            <ContentPresenter.Projection>
                                <PlaneProjection x:Name="BackProjection"/>
                            </ContentPresenter.Projection>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SlideViewItem">
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SlideViewItem">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Margin="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">

                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              CacheMode="BitmapCache"
                                              x:Name="contentPresenter"/>
                            <!--<local:RadBusyIndicator x:Name="busyIndicator" Opacity="0" Style="{TemplateBinding BusyIndicatorStyle}"/>-->
                            <ProgressRing x:Name="busyIndicator" Opacity="0" IsActive="True"/>
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="LoadAnimation">
            <Setter.Value>
                <telerikCore:RadFadeAnimation StartOpacity="0" EndOpacity="1"/>
            </Setter.Value>
        </Setter>-->
        <Setter Property="LoadAnimation">
            <Setter.Value>
                <FadeInThemeAnimation Storyboard.TargetName="border"/>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="BusyIndicatorStyle">
            <Setter.Value>
                <Style TargetType="local:RadBusyIndicator">
                    <Setter Property="InitialDelay" Value="00:00:0.3"/>
                </Style>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="local:SlideView">
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SlideView">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Padding}">
                        <Grid>
                            <local:SlideViewPanel x:Name="itemsPanel" 
                                                  HorizontalAlignment="Stretch" 
                                                  VerticalAlignment="Stretch">
                            </local:SlideViewPanel>
                            <Canvas x:Name="transitionLayer" IsHitTestVisible="False"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:CacheImage">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CacheImage">
                    <Image x:Name="image" Source="{TemplateBinding Source}" Stretch="{TemplateBinding Stretch}" 
                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"
                           NineGrid="{TemplateBinding NineGrid}">

                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ClipImageBrush">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ClipImageBrush">
                    <Grid x:Name="gridRoot">
                        <Grid.Background>
                            <ImageBrush x:Name="imageBrush" Stretch="{TemplateBinding Stretch}" AlignmentX="{TemplateBinding AlignmentX}" AlignmentY="{TemplateBinding AlignmentY}" />
                        </Grid.Background>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:Meter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Meter">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ImageGif">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ImageGif">
                    <!--<Image x:Name="imageGif" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="{TemplateBinding Stretch}"/>-->
                    <Viewbox x:Name="viewBox" Stretch="Uniform">
                        <Grid x:Name="imageGifGrid"></Grid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ColorPicker Brush-->
    <LinearGradientBrush x:Key="BorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0"/>
        <GradientStop Color="#FF8399A9" Offset="0.375"/>
        <GradientStop Color="#FF718597" Offset="0.375"/>
        <GradientStop Color="#FF617584" Offset="1"/>
    </LinearGradientBrush>

    <!--ColorPicker-->
    <Style TargetType="local:ColorPicker">
        <Setter Property="Padding" Value="6,2,25,2" />
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorPicker">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <Style x:Name="ColorPickerButtonStyle" TargetType="Button">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay2" Storyboard.TargetProperty="Opacity" To="1"/>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#E5FFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#BCFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="Background" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
                                                <Rectangle x:Name="BackgroundOverlay" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle x:Name="BackgroundOverlay2" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle x:Name="BackgroundGradient" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle Opacity="0" x:Name="BackgroundOverlay3" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                                                <Rectangle Opacity="0" x:Name="BackgroundGradient2" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="Highlight" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" />
                                                <ContentPresenter
                                                        x:Name="contentPresenter"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}"/>
                                                <Rectangle x:Name="FocusVisualElement" RadiusX="3.5" Margin="1"  RadiusY="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" IsHitTestVisible="false" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <!--<Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <!--<Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <!--<Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <x:Boolean>True</x:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <Button x:Name="DropDownButton" Style="{StaticResource ColorPickerButtonStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0" HorizontalContentAlignment="Right" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Path x:Name="PathArrow" Height="4" Width="8" Stretch="Uniform" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Margin="0,0,6,0" HorizontalAlignment="Right">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BrushArrowColor" Color="#FF333333"/>
                                        </Path.Fill>
                                    </Path>
                                </Button>
                                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle x:Name="RectangleColor" Margin="0,0,5,2" Height="11" Width="22" StrokeThickness="1" Stroke="{StaticResource BorderBrush}" Fill="Transparent" />
                                        <TextBlock x:Name="TextBlockColor" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" />
                                    </StackPanel>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="White" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1"  Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                        <Popup x:Name="Popup"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PredefinedColorItem-->
    <Style TargetType="local:PredefinedColorItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PredefinedColorItem">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle x:Name="RectangleColor" Height="11" Width="22" StrokeThickness="1" Stroke="{StaticResource BorderBrush}" Fill="Transparent" />
                        <TextBlock x:Name="TextBlockColor" Foreground="{TemplateBinding Foreground}" Margin="5,0" Text="{TemplateBinding Text}"></TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Color Board-->
    <Style TargetType="local:ColorBoard">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Color" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorBoard">
                    <StackPanel x:Name="RootElement" HorizontalAlignment="Center">
                        <Border Height="160" Width="296" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="White">
                                <Grid.Resources>
                                    <Style x:Key="ThumbHorizontalStyle" TargetType="Thumb">
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Grid>
                                                        <Rectangle x:Name="BackgroundGradient" Fill="Transparent" />
                                                        <Path Fill="Navy" Data="M 0,9 L 0,4 L 5,0 L 10,4 L 10,9 Z" VerticalAlignment="Bottom" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <Style x:Key="ThumbVerticalStyle" TargetType="Thumb">
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Grid>
                                                        <Rectangle x:Name="BackgroundGradient" Fill="Transparent" />
                                                        <Path Fill="Navy" Data="M 0,0 L 5,5 L 0,10 Z" />
                                                        <Path Fill="Navy" Data="M 5,0 L 0,5 L 5,10 Z" HorizontalAlignment="Right" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <Style x:Key="SliderCustomizedStyle" TargetType="Slider">
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="Maximum" Value="10" />
                                        <Setter Property="Minimum" Value="0" />
                                        <Setter Property="Value" Value="0" />
                                        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Slider">
                                                    <Grid x:Name="Root">
                                                        <Grid.Resources>
                                                            <ControlTemplate x:Key="RepeatButtonTemplate">
                                                                <Grid x:Name="Root" Opacity="0" Background="Transparent"/>
                                                            </ControlTemplate>
                                                        </Grid.Resources>

                                                        <!-- Horizontal Template -->
                                                        <Grid x:Name="HorizontalTemplate">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <!-- Track Layer -->
                                                            <Rectangle Grid.Column="0" Grid.ColumnSpan="3" Height="10" Margin="5,0" Stroke="{StaticResource BorderBrush}" StrokeThickness="1" >
                                                                <Rectangle.Fill>
                                                                    <ImageBrush Stretch="None" ImageSource="Themes/Transparent.png" />
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                            <Rectangle x:Name="TrackRectangle" Grid.Column="0" Grid.ColumnSpan="3" Height="10" Margin="5,0" Stroke="{StaticResource BorderBrush}" StrokeThickness="1" Fill="{TemplateBinding Background}" />
                                                            <!-- Repeat Buttons + Thumb -->
                                                            <Rectangle x:Name="HorizontalDecreaseRect" Height="18" Grid.Column="0" Fill="Transparent"/>
                                                            <Thumb x:Name="HorizontalThumb" DataContext="{TemplateBinding Value}" Height="18" Width="11" Grid.Column="1" IsTabStop="True" Style="{StaticResource ThumbHorizontalStyle}" />
                                                            <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton" Height="18" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="2"/>
                                                        </Grid>

                                                        <!-- Vertical Template -->
                                                        <Grid x:Name="VerticalTemplate" Visibility="Collapsed">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>

                                                            <!-- Track Layer -->
                                                            <Rectangle Grid.Row="0" Grid.RowSpan="3" Width="12" Margin="0,5" Fill="{TemplateBinding Background}" />
                                                            <!-- Repeat Buttons + Thumb -->
                                                            <Rectangle x:Name="VerticalDecreaseRect" Width="18" Grid.Row="2" Fill="Transparent"/>
                                                            <Thumb x:Name="VerticalThumb" DataContext="{TemplateBinding Value}" Height="11" Width="18" Grid.Row="1" IsTabStop="True" Style="{StaticResource ThumbVerticalStyle}" />
                                                            <RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton" Width="18" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="0"/>
                                                        </Grid>

                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                    <Style x:Key="TextBoxCustomizedStyle" TargetType="TextBox">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="#FF000000"/>
                                        <Setter Property="Padding" Value="2"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <Grid x:Name="RootElement">
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal"/>
                                                                <VisualState x:Name="PointerOver"/>
                                                                <VisualState x:Name="Disabled">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="ReadOnly">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="FocusStates">
                                                                <VisualState x:Name="Focused"/>
                                                                <VisualState x:Name="Unfocused"/>
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="ValidationStates">
                                                                <VisualState x:Name="Valid"/>
                                                                <VisualState x:Name="InvalidUnfocused"/>
                                                                <VisualState x:Name="InvalidFocused"/>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                                            <Grid>
                                                                <Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#5EC9C9C9"/>
                                                                <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="Transparent">
                                                                    <ScrollViewer x:Name="ContentElement" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False" VerticalScrollBarVisibility="Disabled"/>
                                                                </Border>
                                                            </Grid>
                                                        </Border>
                                                        <Border x:Name="DisabledVisualElement" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" IsHitTestVisible="False"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="28"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <!--HSV Part-->
                                    <Canvas x:Name="CanvasHSV" Grid.Column="0" Margin="5" HorizontalAlignment="Left" Width="80" Height="80">
                                        <Rectangle x:Name="RectangleRootHSV" Width="80" Height="80" Stroke="{StaticResource BorderBrush}" StrokeThickness="1">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop x:Name="GradientStopHSVColor" Color="#FFFF0000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>

                                        <Rectangle x:Name="RectangleHSV" Width="80" Height="80">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <GradientStop Color="#00000000" Offset="0" />
                                                    <GradientStop Color="#FF000000" Offset="1" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>

                                        <Rectangle x:Name="EllipseHSV" Height="8" Width="8" IsHitTestVisible="False" Stroke="Black" Fill="#4CFFFFFF">
                                            <!--<Rectangle.Fill>
                                                 <LinearGradientBrush>
                                                    <GradientStop Color="Transparent" Offset="0" />
                                                    <GradientStop Color="Transparent" Offset="0.25" />
                                                    <GradientStop Color="White" Offset="0.5" />
                                                    <GradientStop Color="Black" Offset="0.75" />
                                                    <GradientStop Color="White" Offset="1" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>-->
                                        </Rectangle>
                                    </Canvas>

                                    <Slider Name="SliderHSV" Grid.Column="1" Margin="0" Width="24" Height="90" Style="{StaticResource SliderCustomizedStyle}" Orientation="Vertical" HorizontalAlignment="Right" IsDirectionReversed="True" Maximum="359" SmallChange="1">
                                        <Slider.Background>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="#FFFF0000" Offset="0.0" />
                                                <GradientStop Color="#FFFFFF00" Offset="0.16666666667" />
                                                <GradientStop Color="#FF00FF00" Offset="0.33333333333" />
                                                <GradientStop Color="#FF00FFFF" Offset="0.5" />
                                                <GradientStop Color="#FF0000FF" Offset="0.66666666667" />
                                                <GradientStop Color="#FFFF00FF" Offset="0.83333333333" />
                                                <GradientStop Color="#FFFF0000" Offset="1.0" />
                                            </LinearGradientBrush>
                                        </Slider.Background>
                                    </Slider>

                                    <!--RGB Part-->
                                    <Grid Grid.Column="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="10"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="30"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="A" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="Black" Margin="0,2,0,0"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="R" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="Black" Margin="0,2,0,0"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="G" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="Black" Margin="0,2,0,0"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="B" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="Black" Margin="0,2,0,0"/>

                                        <Slider Grid.Row="0" Grid.Column="2" x:Name="SliderA" Width="120" Height="20" Style="{StaticResource SliderCustomizedStyle}" Orientation="Horizontal" Maximum="255" SmallChange="1" VerticalAlignment="Center">
                                            <Slider.Background>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop x:Name="GradientStopA0" Color="#00000000" Offset="0.0" />
                                                    <GradientStop x:Name="GradientStopA1" Color="#FF000000" Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Slider.Background>
                                        </Slider>

                                        <Slider Grid.Row="1" Grid.Column="2" x:Name="SliderR" Width="120" Height="20" Style="{StaticResource SliderCustomizedStyle}" Orientation="Horizontal" Maximum="255" SmallChange="1" VerticalAlignment="Center">
                                            <Slider.Background>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop x:Name="GradientStopR0" Color="#FF000000" Offset="0.0" />
                                                    <GradientStop x:Name="GradientStopR1" Color="#FFFF0000" Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Slider.Background>
                                        </Slider>

                                        <Slider Grid.Row="2" Grid.Column="2" x:Name="SliderG" Width="120" Height="20" Style="{StaticResource SliderCustomizedStyle}" Orientation="Horizontal" Maximum="255" SmallChange="1" VerticalAlignment="Center">
                                            <Slider.Background>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop x:Name="GradientStopG0" Color="#FF000000" Offset="0.0" />
                                                    <GradientStop x:Name="GradientStopG1" Color="#FF00FF00" Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Slider.Background>
                                        </Slider>

                                        <Slider Grid.Row="3" Grid.Column="2" x:Name="SliderB" Width="120" Height="20" Style="{StaticResource SliderCustomizedStyle}" Orientation="Horizontal" Maximum="255" SmallChange="1" VerticalAlignment="Center">
                                            <Slider.Background>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <GradientStop x:Name="GradientStopB0" Color="#FF000000" Offset="0.0" />
                                                    <GradientStop x:Name="GradientStopB1" Color="#FF0000FF" Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Slider.Background>
                                        </Slider>

                                        <TextBox x:Name="TextBoxA" Grid.Row="0" Grid.Column="3" Height="20" Width="24" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"/>
                                        <TextBox x:Name="TextBoxR" Grid.Row="1" Grid.Column="3" Height="20" Width="24" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"/>
                                        <TextBox x:Name="TextBoxG" Grid.Row="2" Grid.Column="3" Height="20" Width="24" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"/>
                                        <TextBox x:Name="TextBoxB" Grid.Row="3" Grid.Column="3" Height="20" Width="24" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"/>
                                    </Grid>
                                </Grid>

                                <!--Result Part-->
                                <StackPanel Grid.Row="2" Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style x:Key="ConfirmBtStyle" TargetType="Button">
                                            <Setter Property="FontFamily" Value="Microsoft YaHei" />
                                            <Setter Property="FontSize" Value="15"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid Background="Transparent">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="PointerOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <PointerDownThemeAnimation TargetName="border"/>
                                                                            <ColorAnimation Duration="0" To="#FF2B85A9" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="border">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <SolidColorBrush Color="#FFFFFF"/>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="border">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <SolidColorBrush Color="#D2D2D2"/>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="border">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Thickness>1</Thickness>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                            <ColorAnimation Duration="0" To="#FFD2D2D2" Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused"/>
                                                                    <VisualState x:Name="Unfocused"/>
                                                                    <VisualState x:Name="PointerFocused"/>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Border x:Name="border" RenderTransformOrigin="0.5,0.5" BorderBrush="Transparent" BorderThickness="0" Background="#6AAED9">
                                                                <Border.RenderTransform>
                                                                    <CompositeTransform/>
                                                                </Border.RenderTransform>
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                            </Border>
                                                            <Grid x:Name="grid" Background="#FFFFFF" Visibility="Collapsed" Opacity="0.15" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </StackPanel.Resources>
                                    <Canvas Height="20" Width="150" Margin="8,0" VerticalAlignment="Center">
                                        <ComboBox x:Name="ComboBoxColor" Height="22" Width="150" VerticalAlignment="Center" Visibility="Visible" Canvas.Left="-1.7" Canvas.Top="2"/>
                                        <StackPanel Orientation="Horizontal" Margin="6,0,0,0" Visibility="Visible">
                                            <Rectangle x:Name="RectangleColor" Width="22" Height="11" Stroke="{StaticResource BorderBrush}" StrokeThickness="1" Margin="0,-5,0,0">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush x:Name="BrushColor" Color="White"/>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <TextBox x:Name="TextBoxColor" Margin="5,0" Height="20" Width="88" Style="{StaticResource TextBoxCustomizedStyle}" />
                                        </StackPanel>
                                    </Canvas>
                                    <Button x:Name="ButtonDone" Width="78" Content="Apply" VerticalAlignment="Center" Padding="0,0,0,0" FontSize="15" Style="{StaticResource ConfirmBtStyle}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:MatButton">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundThemeBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThemeThickness}"/>
        <Setter Property="Padding" Value="12,4,12,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="Content" Value="Mat"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MatButton">
                    <Border x:Name="border" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Yellow"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation TargetName="border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Released">
                                    <Storyboard>
                                        <PointerUpThemeAnimation TargetName="border"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">

                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ColorBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ColorBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ComboBox x:Name="comboBox" ItemsSource="{Binding Colors}" SelectedItem="{Binding SelectedColorName, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Width="35" Height="20" Fill="{Binding Name}" Margin="5,-1.5"/>
                                        <TextBlock Grid.Column="1" Margin="10,0,0,0" Text="{Binding Name}" Foreground="Black"/>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="local:CascadingImageControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CascadingImageControl">-->
                    <!--Viewbox Look at,Not Open-->
                    <!--<Viewbox x:Name="LayoutViewbox" Stretch="Fill">-->
                    <!--<Grid
                        x:Name="PART_LayoutGrid" />-->
                    <!--</Viewbox>-->
                <!--</ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="local:CascadingImageControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CascadingImageControl">
                    <!--<Viewbox x:Name="LayoutViewbox" Stretch="Fill">-->
                    <Canvas
                        x:Name="PART_LayoutCanvas" />
                    <!--</Viewbox>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:MoveOutControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MoveOutControl">
                    <!--<Viewbox x:Name="LayoutViewbox" Stretch="Fill">-->
                    <Grid x:Name="gridRoot">
                        <Border x:Name="borderBack" />
                        <Border x:Name="borderPositive" RenderTransformOrigin="0.5,0.5" />
                    </Grid>
                    <!--</Viewbox>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SettingsFlyout">
        <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}" />
        <Setter Property="HeaderBrush" Value="{StaticResource SettingsFlyoutHeaderBackgroundBrush}" />
        <Setter Property="HeaderText" Value="{StaticResource SettingsFlyoutHeaderTextDefault}" />
        <Setter Property="ContentBackgroundBrush" Value="{StaticResource SettingsFlyoutContentBackgroundThemeBrush}" />
        <Setter Property="ContentForegroundBrush" Value="{StaticResource SettingsFlyoutContentForegroundThemeBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MaxWidth" Value="646" />
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SettingsFlyout">
                    <Border x:Name="PART_RootBorder" BorderBrush="{Binding ElementName=PART_HeaderGrid, Path=Background, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource ColorBrightness}, ConverterParameter=0.8}" BorderThickness="1,0,0,0" VerticalAlignment="Stretch">
                        <Grid Background="{TemplateBinding Background}" VerticalAlignment="Stretch">
                            <!-- Root grid definition -->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="80" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- Header area for panel -->
                            <Grid Background="{TemplateBinding HeaderBrush}" Grid.Row="0" x:Name="PART_HeaderGrid">

                                <Grid Margin="40,35,40,13">
                                    <Grid.Resources>
                                        <Style x:Key="SettingsBackButtonStyle2" TargetType="Button">
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                                            <Setter Property="FontWeight" Value="Normal"/>
                                            <Setter Property="FontSize" Value="26.66667"/>
                                            <Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
                                            <Setter Property="AutomationProperties.Name" Value="Back"/>
                                            <Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid x:Name="RootGrid" Width="30" Height="30">
                                                            <Grid Margin="-3,-5,0,0">
                                                                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0D4;" Foreground="{Binding ElementName=PART_HeaderGrid, Path=Background}"/>
                                                                <TextBlock x:Name="NormalGlyph" Text="{StaticResource SettingsFlyoutBackButtonGlyph}" Foreground="{Binding ElementName=PART_HeaderGrid, Path=Background, Converter={StaticResource ColorContrast}}"/>
                                                                <TextBlock x:Name="ArrowGlyph" Text="&#xE0C4;" Foreground="{Binding ElementName=PART_HeaderGrid, Path=Background}" Opacity="0"/>
                                                            </Grid>
                                                            <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                                                            <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal" />
                                                                    <VisualState x:Name="PointerOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ElementName=PART_HeaderGrid, Path=Background, Converter={StaticResource ColorContrast}}"/>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                            <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                                                            <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                                                            <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused" />
                                                                    <VisualState x:Name="PointerFocused" />
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>

                                    <Button x:Name="SettingsBackButton" Margin="0,0,0,0" Grid.Column="0" Style="{StaticResource SettingsBackButtonStyle2}" HorizontalAlignment="Left" />

                                    <TextBlock Foreground="{Binding ElementName=PART_HeaderGrid, Path=Background, Converter={StaticResource ColorContrast}}" TextTrimming="WordEllipsis" Margin="10,-2,0,0" Grid.Column="1" FontFamily="Segoe UI" FontWeight="SemiLight" FontSize="24.6667" Text="{TemplateBinding HeaderText}" HorizontalAlignment="Left" />

                                    <Image Source="{TemplateBinding SmallLogoImageSource}" HorizontalAlignment="Right" Grid.Column="2" Margin="0,0,0,0" />

                                </Grid>

                            </Grid>

                            <!-- Settings Panel Content -->
                            <ScrollViewer Background="{TemplateBinding ContentBackgroundBrush}" 
                                          Foreground="{TemplateBinding ContentForegroundBrush}" 
                                          Grid.Row="1" 
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" 
                                          VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                          HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" 
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          ZoomMode="Disabled" x:Name="PART_ContentScrollViewer">
                                <Grid x:Name="SettingsFlyoutContentGrid" Margin="33,22,40,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  />
                                </Grid>
                            </ScrollViewer>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:RatingItem">
        <Setter Property="BorderBrush" Value="{StaticResource RatingItemBorderThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="ReadOnlyFill" Value="{StaticResource RatingItemDisabledForegroundThemeBrush}"/>
        <Setter Property="Margin" Value="6,0,6,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:RatingItem">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PointerOverRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerPressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PointerPressedRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerExited">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PointerPressedRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledRatingItem" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledRatingItemBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FillStates">
                                <VisualState x:Name="Empty"/>
                                <VisualState x:Name="Partial"/>
                                <VisualState x:Name="Filled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="DefaultRatingItem" Text="{TemplateBinding Tag}" Foreground="{StaticResource RatingItemBackgroundThemeBrush}"  FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                        <primitives:LinearClipper RatioVisible="{TemplateBinding DisplayValue}" ExpandDirection="Right">
                            <TextBlock Text="{TemplateBinding Tag}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                        </primitives:LinearClipper>
                        <TextBlock x:Name="PointerOverRatingItem" Opacity="0" Text="{TemplateBinding Tag}" Foreground="{TemplateBinding PointerOverFill}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                        <TextBlock x:Name="PointerPressedRatingItem" Opacity="0" Text="{TemplateBinding Tag}" Foreground="{TemplateBinding PointerPressedFill}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                        <TextBlock x:Name="DisabledRatingItemBackground" Text="{TemplateBinding Tag}" Foreground="{StaticResource RatingItemBackgroundThemeBrush}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Opacity="0" />
                        <primitives:LinearClipper x:Name="DisabledRatingItem" RatioVisible="{TemplateBinding DisplayValue}" ExpandDirection="Right" Opacity="0">
                            <TextBlock Text="{TemplateBinding Tag}" Foreground="{TemplateBinding ReadOnlyFill}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                        </primitives:LinearClipper>
                        <ContentPresenter x:Name="Content" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.RowSpan="2" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:Rating">
        <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource RatingItemForegroundThemeBrush}" />
        <Setter Property="PointerOverFill" Value="{StaticResource RatingItemPointerOverThemeBrush}" />
        <Setter Property="PointerPressedFill" Value="{StaticResource RatingItemPointerPressedThemeBrush}" />
        <Setter Property="ReadOnlyFill"
                Value="{StaticResource RatingItemDisabledForegroundThemeBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="28" />
        <Setter Property="Tag" Value="&#xE082;" />
        <Setter Property="Margin" Value="12,0,0,0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Rating">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="PointerPressed"/>
                                <VisualState x:Name="PointerExited"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Margin}"  BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsPresenter/>
                        </Border>
                        <Border x:Name="ReadOnlyVisualElement" IsHitTestVisible="False" Opacity="0" Background="#83FFFFFF" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#FF4D4D4D" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="FocusVisualElement" StrokeThickness="1" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="local:CropImageControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CropImageControl">
                    <Canvas x:Name="PART_Canvas" Background="#00000000">
                        <Image x:Name="PART_Image" Stretch="Fill" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
